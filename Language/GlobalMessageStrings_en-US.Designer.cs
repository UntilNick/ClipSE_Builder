//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClipPurSEditionBuilder.Language {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GlobalMessageStrings_en_US {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GlobalMessageStrings_en_US() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClipPurSEditionBuilder.Language.GlobalMessageStrings_en-US", typeof(GlobalMessageStrings_en_US).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A new version of the program is available.
        /// </summary>
        internal static string AccessNew {
            get {
                return ResourceManager.GetString("AccessNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add at least one wallet to the database.
        /// </summary>
        internal static string BasePurse {
            get {
                return ResourceManager.GetString("BasePurse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bitcoin address copied..
        /// </summary>
        internal static string BitCopy {
            get {
                return ResourceManager.GetString("BitCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Build created successfully!.
        /// </summary>
        internal static string BuildCreated {
            get {
                return ResourceManager.GetString("BuildCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current version:.
        /// </summary>
        internal static string CurrentVer {
            get {
                return ResourceManager.GetString("CurrentVer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data added!.
        /// </summary>
        internal static string DataAdd {
            get {
                return ResourceManager.GetString("DataAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The data is loaded!.
        /// </summary>
        internal static string DataLoader {
            get {
                return ResourceManager.GetString("DataLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data saved!.
        /// </summary>
        internal static string DataSave {
            get {
                return ResourceManager.GetString("DataSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Version. dll does not match!.
        /// </summary>
        internal static string DLLNotCorrect {
            get {
                return ResourceManager.GetString("DLLNotCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fill in the fields.
        /// </summary>
        internal static string EmptySave {
            get {
                return ResourceManager.GetString("EmptySave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error while copying..
        /// </summary>
        internal static string ErrorBitCopy {
            get {
                return ResourceManager.GetString("ErrorBitCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error while creating the build!.
        /// </summary>
        internal static string ErrorBuild {
            get {
                return ResourceManager.GetString("ErrorBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No connection to server.
        /// </summary>
        internal static string ErrorConnect {
            get {
                return ResourceManager.GetString("ErrorConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на License verification error.
        /// </summary>
        internal static string ErrorLicense {
            get {
                return ResourceManager.GetString("ErrorLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error loading data.
        /// </summary>
        internal static string ErrorLoader {
            get {
                return ResourceManager.GetString("ErrorLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error saving data.
        /// </summary>
        internal static string ErrorSave {
            get {
                return ResourceManager.GetString("ErrorSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the extension.
        /// </summary>
        internal static string Extension {
            get {
                return ResourceManager.GetString("Extension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All fields cleared..
        /// </summary>
        internal static string FieldsClean {
            get {
                return ResourceManager.GetString("FieldsClean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File not found!.
        /// </summary>
        internal static string FileExists {
            get {
                return ResourceManager.GetString("FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fill in all fields!.
        /// </summary>
        internal static string FillFields {
            get {
                return ResourceManager.GetString("FillFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have the latest version of Builder.
        /// </summary>
        internal static string FinalVersionMessage {
            get {
                return ResourceManager.GetString("FinalVersionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на app.Manifest not found!.
        /// </summary>
        internal static string FindManifest {
            get {
                return ResourceManager.GetString("FindManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Find icon for build file.
        /// </summary>
        internal static string IconChoice {
            get {
                return ResourceManager.GetString("IconChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your access key:.
        /// </summary>
        internal static string Key {
            get {
                return ResourceManager.GetString("Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на License status: Activated.
        /// </summary>
        internal static string LicenseActivate {
            get {
                return ResourceManager.GetString("LicenseActivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на License status: not activated.
        /// </summary>
        internal static string LicenseNoActivate {
            get {
                return ResourceManager.GetString("LicenseNoActivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mod folder or *CLI.exe file not found!.
        /// </summary>
        internal static string ModCLI {
            get {
                return ResourceManager.GetString("ModCLI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mono.Cecil.dll not found!.
        /// </summary>
        internal static string MonoFind {
            get {
                return ResourceManager.GetString("MonoFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New  version:.
        /// </summary>
        internal static string NewVer {
            get {
                return ResourceManager.GetString("NewVer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No icon selected!.
        /// </summary>
        internal static string NoIconChoice {
            get {
                return ResourceManager.GetString("NoIconChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Build obfuscated!.
        /// </summary>
        internal static string Obfuscated {
            get {
                return ResourceManager.GetString("Obfuscated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Starts reboot builder.
        /// </summary>
        internal static string RestartBuild {
            get {
                return ResourceManager.GetString("RestartBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Icon size:.
        /// </summary>
        internal static string SizeIcon {
            get {
                return ResourceManager.GetString("SizeIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Updates downloaded!.
        /// </summary>
        internal static string UpdateSuccess {
            get {
                return ResourceManager.GetString("UpdateSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username:.
        /// </summary>
        internal static string UserName {
            get {
                return ResourceManager.GetString("UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Version:.
        /// </summary>
        internal static string VerSoftware {
            get {
                return ResourceManager.GetString("VerSoftware", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Welcome.
        /// </summary>
        internal static string Welcome {
            get {
                return ResourceManager.GetString("Welcome", resourceCulture);
            }
        }
    }
}
